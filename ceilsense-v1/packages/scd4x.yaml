sensor:
  - platform: scd4x
    id: scd41_sensor
    co2:
      name: "SCD41 CO2"
      id: scd41_co2
    temperature:
      name: "SCD41 Temperature"
      id: scd41_temperature
      filters:
        - lambda: |-
            return x + id(scd4x_temp_offset).state;
    humidity:
      name: "SCD41 Humidity"
      id: scd41_humidity
      filters:
        - lambda: |-
            return x + id(scd4x_humidity_offset).state;
    measurement_mode: low_power_periodic
    update_interval: 30s
    automatic_self_calibration: false
    temperature_offset: 10.0  # Vaste offset voor ESP warmte compensatie
    ambient_pressure_compensation_source: bmp_pressure

number:
  - platform: template
    name: "SCD4x Extra Temperature Offset (°C)"
    id: scd4x_temp_offset
    icon: mdi:thermometer-plus
    entity_category: config
    optimistic: true
    restore_value: true
    initial_value: 5  # Extra offset bovenop vaste 10°C
    min_value: -20.0
    max_value: 20.0
    step: 0.1
    unit_of_measurement: "°C"
    mode: box

  - platform: template
    name: "SCD4x Humidity Offset (%)"
    id: scd4x_humidity_offset
    icon: mdi:water-percent
    entity_category: config
    optimistic: true
    restore_value: true
    initial_value: 0.0
    min_value: -20.0
    max_value: 20.0
    step: 0.1
    unit_of_measurement: "%"
    mode: box

esphome:
  # Zelftest fase 3: SCD4x waarden
  on_boot:
    - priority: 560
      then:
        - lambda: 'id(scd4x_required) = true;'
        - lambda: |-
            id(startup_phase) = 3;
        - wait_until:
            condition:
              lambda: |-
                return id(scd41_co2).has_state() && id(scd41_temperature).has_state() && id(scd41_humidity).has_state() &&
                       !isnan(id(scd41_co2).state) && !isnan(id(scd41_temperature).state) && !isnan(id(scd41_humidity).state);
            timeout: 60s
        - if:
            condition:
              lambda: |-
                return !id(scd41_co2).has_state() || !id(scd41_temperature).has_state() || !id(scd41_humidity).has_state() ||
                       isnan(id(scd41_co2).state) || isnan(id(scd41_temperature).state) || isnan(id(scd41_humidity).state);
            then:
              - lambda: |-
                  id(startup_failed) = true;
        - lambda: 'id(scd4x_checked) = true;'