name: Build and Publish CeilSense firmware and website

on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '**.yaml'
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  update-versions:
    name: Update version numbers in YAML files
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.update.outputs.new_version }}
      version_changed: ${{ steps.update.outputs.version_changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Update version numbers
        id: update
        shell: bash
        run: |
          set -euo pipefail

          CURRENT_VERSION=$(grep "project_main_version:" ceilsense-v1/base.yaml | sed 's/.*: *"\([^"]*\)".*/\1/')
          echo "Current version: $CURRENT_VERSION"

          NEW_VERSION="${CURRENT_VERSION}"
          VERSION_CHANGED=false

          # Determine VERSION from tag or fallback to increment version
          if [[ "${GITHUB_REF_TYPE}" == "tag" && "${GITHUB_REF_NAME}" =~ ^v[0-9]+(\.[0-9]+)*$ ]]; then
            NEW_VERSION="${GITHUB_REF_NAME#v}"
            echo "Using tag VERSION=$NEW_VERSION"
          else
            # Extract version parts and increment
            if [[ "$CURRENT_VERSION" =~ ^([0-9]+)\.([0-9]+)(.*)$ ]]; then
              MAJOR="${BASH_REMATCH[1]}"
              MINOR="${BASH_REMATCH[2]}"
              SUFFIX="${BASH_REMATCH[3]}"
              NEW_MINOR=$((MINOR + 1))
              NEW_VERSION="${MAJOR}.${NEW_MINOR}${SUFFIX}"
            else
              # Fallback for unexpected format
              SHORTSHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
              NEW_VERSION="dev-${SHORTSHA}"
            fi
            echo "Computed new VERSION=$NEW_VERSION"
          fi

          # Update version fields
          sed -i "s/^\s*project_main_version: \".*\"/  project_main_version: \"${NEW_VERSION}\"/" ceilsense-v1/base.yaml
          sed -i "s/^\s*project_version: \".*\"/  project_version: \"${NEW_VERSION}\"/" ceilsense-v1/base.yaml

          if git diff --quiet ceilsense-v1/base.yaml; then
            echo "No version changes needed"
            VERSION_CHANGED=false
          else
            echo "Version updated successfully"
            VERSION_CHANGED=true
          fi

          echo "new_version=${NEW_VERSION}" >> "$GITHUB_OUTPUT"
          echo "version_changed=${VERSION_CHANGED}" >> "$GITHUB_OUTPUT"
      - name: Commit version updates
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && steps.update.outputs.version_changed == 'true'
        shell: bash
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add ceilsense-v1/base.yaml
          git commit -m "chore: update version to $(grep 'project_main_version:' ceilsense-v1/base.yaml | sed 's/.*: *"\([^"]*\)".*/\1/') [skip ci]" || exit 0
          git push || echo "Nothing to push"

  # Basic variants
  publish-ceilsense-basic-wifi:
    name: Publish CeilSense Basic WiFi
    needs: [update-versions]
    if: always() && (needs.update-versions.result == 'success' || needs.update-versions.result == 'skipped')
    uses: ./.github/workflows/esphome-build.yml
    with:
      files: ceilsense-v1/ceilsense-basic-wifi.yaml
      name: CeilSense Basic WiFi
      manifest_filename: ceilsense-basic-wifi-manifest.json
      clean: false
      esphome_version: latest
      directory_name: ceilsense-basic-wifi
      project_version: ${{ needs.update-versions.outputs.new_version }}

  publish-ceilsense-basic-wifi-ld2412:
    name: Publish CeilSense Basic WiFi LD2412
    needs: [update-versions]
    if: always() && (needs.update-versions.result == 'success' || needs.update-versions.result == 'skipped')
    uses: ./.github/workflows/esphome-build.yml
    with:
      files: ceilsense-v1/ceilsense-basic-wifi-ld2412.yaml
      name: CeilSense Basic WiFi LD2412
      manifest_filename: ceilsense-basic-wifi-ld2412-manifest.json
      clean: false
      esphome_version: latest
      directory_name: ceilsense-basic-wifi-ld2412
      project_version: ${{ needs.update-versions.outputs.new_version }}

  publish-ceilsense-basic-wifi-ld2412-single:
    name: Publish CeilSense Basic WiFi LD2412 Single
    needs: [update-versions]
    if: always() && (needs.update-versions.result == 'success' || needs.update-versions.result == 'skipped')
    uses: ./.github/workflows/esphome-build.yml
    with:
      files: ceilsense-v1/ceilsense-basic-wifi-ld2412-single.yaml
      name: CeilSense Basic WiFi LD2412 Single
      manifest_filename: ceilsense-basic-wifi-ld2412-single-manifest.json
      clean: false
      esphome_version: latest
      directory_name: ceilsense-basic-wifi-ld2412-single
      project_version: ${{ needs.update-versions.outputs.new_version }}

  publish-ceilsense-basic-eth:
    name: Publish CeilSense Basic Ethernet
    needs: [update-versions]
    if: always() && (needs.update-versions.result == 'success' || needs.update-versions.result == 'skipped')
    uses: ./.github/workflows/esphome-build.yml
    with:
      files: ceilsense-v1/ceilsense-basic-eth.yaml
      name: CeilSense Basic Ethernet
      manifest_filename: ceilsense-basic-eth-manifest.json
      clean: false
      esphome_version: latest
      directory_name: ceilsense-basic-eth
      project_version: ${{ needs.update-versions.outputs.new_version }}

  publish-ceilsense-basic-eth-ld2412:
    name: Publish CeilSense Basic Ethernet LD2412
    needs: [update-versions]
    if: always() && (needs.update-versions.result == 'success' || needs.update-versions.result == 'skipped')
    uses: ./.github/workflows/esphome-build.yml
    with:
      files: ceilsense-v1/ceilsense-basic-eth-ld2412.yaml
      name: CeilSense Basic Ethernet LD2412
      manifest_filename: ceilsense-basic-eth-ld2412-manifest.json
      clean: false
      esphome_version: latest
      directory_name: ceilsense-basic-eth-ld2412
      project_version: ${{ needs.update-versions.outputs.new_version }}

  # Complete variants
  publish-ceilsense-complete-wifi:
    name: Publish CeilSense Complete WiFi
    needs: [update-versions]
    if: always() && (needs.update-versions.result == 'success' || needs.update-versions.result == 'skipped')
    uses: ./.github/workflows/esphome-build.yml
    with:
      files: ceilsense-v1/ceilsense-complete-wifi.yaml
      name: CeilSense Complete WiFi
      manifest_filename: ceilsense-complete-wifi-manifest.json
      clean: false
      esphome_version: latest
      directory_name: ceilsense-complete-wifi
      project_version: ${{ needs.update-versions.outputs.new_version }}

  publish-ceilsense-complete-wifi-ld2412:
    name: Publish CeilSense Complete WiFi LD2412
    needs: [update-versions]
    if: always() && (needs.update-versions.result == 'success' || needs.update-versions.result == 'skipped')
    uses: ./.github/workflows/esphome-build.yml
    with:
      files: ceilsense-v1/ceilsense-complete-wifi-ld2412.yaml
      name: CeilSense Complete WiFi LD2412
      manifest_filename: ceilsense-complete-wifi-ld2412-manifest.json
      clean: false
      esphome_version: latest
      directory_name: ceilsense-complete-wifi-ld2412
      project_version: ${{ needs.update-versions.outputs.new_version }}

  publish-ceilsense-complete-eth:
    name: Publish CeilSense Complete Ethernet
    needs: [update-versions]
    if: always() && (needs.update-versions.result == 'success' || needs.update-versions.result == 'skipped')
    uses: ./.github/workflows/esphome-build.yml
    with:
      files: ceilsense-v1/ceilsense-complete-eth.yaml
      name: CeilSense Complete Ethernet
      manifest_filename: ceilsense-complete-eth-manifest.json
      clean: false
      esphome_version: latest
      directory_name: ceilsense-complete-eth
      project_version: ${{ needs.update-versions.outputs.new_version }}

  publish-ceilsense-complete-eth-ld2412:
    name: Publish CeilSense Complete Ethernet LD2412
    needs: [update-versions]
    if: always() && (needs.update-versions.result == 'success' || needs.update-versions.result == 'skipped')
    uses: ./.github/workflows/esphome-build.yml
    with:
      files: ceilsense-v1/ceilsense-complete-eth-ld2412.yaml
      name: CeilSense Complete Ethernet LD2412
      manifest_filename: ceilsense-complete-eth-ld2412-manifest.json
      clean: false
      esphome_version: latest
      directory_name: ceilsense-complete-eth-ld2412
      project_version: ${{ needs.update-versions.outputs.new_version }}